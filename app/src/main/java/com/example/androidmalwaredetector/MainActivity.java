package com.example.androidmalwaredetector;

import android.annotation.SuppressLint;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;

import com.google.android.material.snackbar.Snackbar;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.view.View;



import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.List;


public class MainActivity extends AppCompatActivity {

    ListView listView;
    String mSearchText;
    TextView textView, listTextview;
    Button bt;
    Spinner mlAlgoSpinner;
    Button selectMLAlgo;
    final int[] checkedItem = {-1};
    final String[] algo = {"SVM"};

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


       // bt = (Button)findViewById(R.id.installedApps);
//        listView = (ListView)findViewById(R.id.listView);
//        listTextview = (TextView) findViewById(R.id.listtextView);
        selectMLAlgo = (Button) findViewById(R.id.selectAlgo);
        String[] AppList = getResources().getStringArray(R.array.mlModels);

//        final ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
//                android.R.layout.simple_list_item_1, android.R.id.text1, AppList);
//        listView.setAdapter(adapter);
//
//        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
//            @Override
//            public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {
//                String model=adapter.getItem(position);
//                if(model.equals("Random Forest"))
//                    model = "RF";
//                Intent send = new Intent(MainActivity.this, AppViewer.class);
//                send.putExtra("ModelName", model);
//                startActivity(send);
//            }
//        });


//        bt.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                Intent send = new Intent(MainActivity.this, installedApps.class);
//                startActivity(send);
//            }
//        });


           selectMLAlgo.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // AlertDialog builder instance to build the alert dialog
                AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
                alertDialog.setTitle("Select ML Algo");
                String[] AppList = getResources().getStringArray(R.array.mlModels);


                // the function setSingleChoiceItems is the function which builds
                // the alert dialog with the single item selection
                alertDialog.setSingleChoiceItems(AppList, checkedItem[0], new DialogInterface.OnClickListener() {
                    @SuppressLint("SetTextI18n")
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        // update the selected item which is selected by the user
                        // so that it should be selected when user opens the dialog next time
                        // and pass the instance to setSingleChoiceItems method
                        checkedItem[0] = which;

                        // now also update the TextView which previews the selected item
                      //  tvSelectedItemPreview.setText("Selected Item is : " + listItems[which]);
                        Toast.makeText(MainActivity.this, AppList[which], Toast.LENGTH_SHORT).show();
                        algo[0] = (String) AppList[which];

                        // when selected an item the dialog should be closed with the dismiss method
                        dialog.dismiss();
                    }
                });

                // set the negative button if the user
                // is not interested to select or change
                // already selected item
                alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                    }
                });

                // create and build the AlertDialog instance
                // with the AlertDialog builder instance
                AlertDialog customAlertDialog = alertDialog.create();

                // show the alert dialog when the button is clicked
                customAlertDialog.show();
            }
        });


    }

    public void scanAllApps(View view) {
        if(algo[0].equals("Random Forest"))
                    algo[0] = "RF";
        Intent send = new Intent(MainActivity.this, AppViewer.class);
        send.putExtra("ModelName", algo[0]);
        startActivity(send);
    }

    public void SelectAPK(View view) {
        Intent getFile = new Intent(Intent.ACTION_GET_CONTENT);
        getFile.setType("*/*");
        startActivityForResult(getFile, 10);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 10 && resultCode == RESULT_OK) {
            String s = data.getData().getPath();
            Toast.makeText(this, s, Toast.LENGTH_SHORT).show();

        }
    }
}