package com.example.androidmalwaredetector.utilities;

import android.content.Context;
import java.util.Iterator;
import java.util.List;

public class classifier {

   // static String TAG = "classifier";


    public int classify(String pkgName, Context context){
        String manifest = Utils.getManifest(InstalledAppInfo.getSourceDir(pkgName, context));
        ManifestParser manifestParser = new ManifestParser(manifest);
        List<Integer> inputArray = manifestParser.getInputArray();
        int[] arr = convertIntegers(inputArray);
        double result = mlModel.svmModel(arr);
        if(result >= 0.5)
            return 1;
        else
            return 0;
    }

    public static int[] convertIntegers(List<Integer> integers)
    {
        int[] f = new int[187];
        Iterator<Integer> iterator = integers.iterator();
        for (int i = 0; i < f.length; i++)
        {
            f[i] = iterator.next();
        }
        return f;
    }

}


class mlModel {
    public static double svmModel(int[] input) {
        return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0.09524305317102705) + ((input[0]) * (-0.2491231827477579))) + ((input[1]) * (0.16063273528028132))) + ((input[2]) * (0.5893323649024382))) + ((input[3]) * (-0.20446785474513912))) + ((input[4]) * (-0.2341507444510942))) + ((input[5]) * (-0.018747241343221158))) + ((input[6]) * (-0.05579244121505883))) + ((input[7]) * (-0.2127520190327509))) + ((input[8]) * (-0.05674972492951247))) + ((input[9]) * (0.5158457417169058))) + ((input[10]) * (-0.48588618747735857))) + ((input[11]) * (-0.2567629183109346))) + ((input[12]) * (-0.053482949224642584))) + ((input[13]) * (-0.0650817032854092))) + ((input[14]) * (0.145021352903151))) + ((input[15]) * (0.14839381144878053))) + ((input[16]) * (0.051545796702675416))) + ((input[17]) * (-0.07003812119629393))) + ((input[18]) * (-0.12212643927222597))) + ((input[19]) * (-0.1021427338541318))) + ((input[20]) * (0.10558300871353779))) + ((input[21]) * (0.080137643181615))) + ((input[22]) * (0.2263290940425919))) + ((input[23]) * (-0.16015016086468775))) + ((input[24]) * (-0.28968616629051874))) + ((input[25]) * (-0.017937515536505827))) + ((input[26]) * (-0.12808028269576102))) + ((input[27]) * (-0.06941583125282823))) + ((input[28]) * (0.22279662577324474))) + ((input[29]) * (0.02590338603631054))) + ((input[30]) * (-0.01271298391861908))) + ((input[31]) * (-0.013568103252015275))) + ((input[32]) * (0.6202723560441398))) + ((input[33]) * (-0.038918014107525135))) + ((input[34]) * (-0.2850255606213532))) + ((input[35]) * (-0.05231656817720633))) + ((input[36]) * (0.11456661832430456))) + ((input[37]) * (-0.16306388835637475))) + ((input[38]) * (-0.03402904744407699))) + ((input[39]) * (-0.10772359087149579))) + ((input[40]) * (-0.018519060245624976))) + ((input[41]) * (-0.027532172114581255))) + ((input[42]) * (-0.10755404920403229))) + ((input[43]) * (-0.2100494857645635))) + ((input[44]) * (0.09551212916614173))) + ((input[45]) * (-0.22344860876309183))) + ((input[46]) * (-0.25050607437217115))) + ((input[47]) * (0.06416398411543403))) + ((input[48]) * (5613208546.769413))) + ((input[49]) * (0.01563967353556811))) + ((input[50]) * (0.20085122476829523))) + ((input[51]) * (0.19661038581221674))) + ((input[52]) * (-0.03486351287638517))) + ((input[53]) * (-0.013925032753498955))) + ((input[54]) * (0.011563792958311161))) + ((input[55]) * (-0.07353732588675388))) + ((input[56]) * (0.46124888897094407))) + ((input[57]) * (-0.04089591778439526))) + ((input[58]) * (-0.3105307187235102))) + ((input[59]) * (0.05548225134988427))) + ((input[60]) * (0.04587338572044011))) + ((input[61]) * (0.08361749434438179))) + ((input[62]) * (0.04099490769192955))) + ((input[63]) * (0.39856493897393264))) + ((input[64]) * (0.24155954269141938))) + ((input[65]) * (-0.19679284425364169))) + ((input[66]) * (-0.32250547334146173))) + ((input[67]) * (0.14855234869635672))) + ((input[68]) * (0.06839986337266432))) + ((input[69]) * (-0.5039350298427484))) + ((input[70]) * (-0.10084172505753496))) + ((input[71]) * (0.07376417805509652))) + ((input[72]) * (0.013374119070861196))) + ((input[73]) * (-0.16741543946791676))) + ((input[74]) * (-0.19308340762218357))) + ((input[75]) * (-0.07103886987308468))) + ((input[76]) * (0.029404356357595047))) + ((input[77]) * (0.0032610234408226016))) + ((input[78]) * (-0.20804185018104226))) + ((input[79]) * (0.05242647703601062))) + ((input[80]) * (0.28086934239025385))) + ((input[81]) * (0.33075287815671683))) + ((input[82]) * (-0.025202046190171162))) + ((input[83]) * (-0.19200966017909324))) + ((input[84]) * (-0.1751112569447434))) + ((input[85]) * (-0.08069749607969208))) + ((input[86]) * (-0.09269860763495706))) + ((input[87]) * (-0.006826138489636702))) + ((input[88]) * (0.4815596659626373))) + ((input[89]) * (-0.06087100411380641))) + ((input[90]) * (-0.06945188778902209))) + ((input[91]) * (0.08467025280754781))) + ((input[92]) * (0.2593339069198134))) + ((input[93]) * (-0.3872570982482519))) + ((input[94]) * (-0.1478498623174149))) + ((input[95]) * (-0.19509542922939482))) + ((input[96]) * (0.18904973213641896))) + ((input[97]) * (-0.05162958341891445))) + ((input[98]) * (-0.09385884145131192))) + ((input[99]) * (0.904602246671383))) + ((input[100]) * (0.09888505587129706))) + ((input[101]) * (0.18752612799235516))) + ((input[102]) * (-0.22246196393976483))) + ((input[103]) * (-0.04181342955397169))) + ((input[104]) * (-0.050764692696965624))) + ((input[105]) * (0.20053919576255164))) + ((input[106]) * (-0.08512289953952615))) + ((input[107]) * (0.1906163839666308))) + ((input[108]) * (-0.18710477169250356))) + ((input[109]) * (-0.07214044214679106))) + ((input[110]) * (-0.0302661921966316))) + ((input[111]) * (-0.13687484208439576))) + ((input[112]) * (0.4599867446310034))) + ((input[113]) * (-0.06272032625642417))) + ((input[114]) * (0.06594587285546433))) + ((input[115]) * (0.006432484656028879))) + ((input[116]) * (-0.2931139156374245))) + ((input[117]) * (0.08051294156641634))) + ((input[118]) * (-0.1540173629087556))) + ((input[119]) * (0.015371917789989219))) + ((input[120]) * (0.2951713963289054))) + ((input[121]) * (0.044343188919095))) + ((input[122]) * (-0.09581690034779711))) + ((input[123]) * (-0.09298779914657226))) + ((input[124]) * (-5613208546.401121))) + ((input[125]) * (-0.05156603499559231))) + ((input[126]) * (-0.003654056506441683))) + ((input[127]) * (0.47954357791964247))) + ((input[128]) * (-0.23777949145713967))) + ((input[129]) * (0.11837633115972104))) + ((input[130]) * (0.014451047255511076))) + ((input[131]) * (-0.14875618403600407))) + ((input[132]) * (0.01600311031347304))) + ((input[133]) * (0.006602495349722348))) + ((input[134]) * (-0.1433141113716689))) + ((input[135]) * (-0.04179341877077108))) + ((input[136]) * (-0.13808379037526763))) + ((input[137]) * (0.7602633734513768))) + ((input[138]) * (0.011985650454197187))) + ((input[139]) * (-0.0897425197680179))) + ((input[140]) * (0.07224836134263361))) + ((input[141]) * (0.15316360044831367))) + ((input[142]) * (-0.8955203940936206))) + ((input[143]) * (-1204881008.340866))) + ((input[144]) * (1204881007.997218))) + ((input[145]) * (0.7010499727832891))) + ((input[146]) * (-0.013836961616581218))) + ((input[147]) * (0.1938908458579106))) + ((input[148]) * (0.0736154911502757))) + ((input[149]) * (-0.273040040625551))) + ((input[150]) * (-0.06970362708793545))) + ((input[151]) * (0.043660291240330565))) + ((input[152]) * (-0.13030166568472515))) + ((input[153]) * (0.11957998526491669))) + ((input[154]) * (0.1037423875129884))) + ((input[155]) * (-0.12810159177810698))) + ((input[156]) * (0.017073665247263614))) + ((input[157]) * (-0.19206789039878697))) + ((input[158]) * (-0.2215807670009371))) + ((input[159]) * (-0.307649957152848))) + ((input[160]) * (0.6797896466076921))) + ((input[161]) * (-0.06401516362730908))) + ((input[162]) * (0.09272272446712906))) + ((input[163]) * (0.19886753900936766))) + ((input[164]) * (-1299605168.134392))) + ((input[165]) * (-0.21609696726917882))) + ((input[166]) * (-0.16531640223907884))) + ((input[167]) * (-0.2872580810468223))) + ((input[168]) * (0.19719160362228866))) + ((input[169]) * (178141017512.56476))) + ((input[170]) * (0.012465456210467775))) + ((input[171]) * (383134688273.6494))) + ((input[172]) * (193462640888.8767))) + ((input[173]) * (-288553318282.75745))) + ((input[174]) * (-288044010879.6969))) + ((input[175]) * (-383134688273.5495))) + ((input[176]) * (-193462640888.5581))) + ((input[177]) * (199228155825.0187))) + ((input[178]) * (199228155825.0187))) + ((input[179]) * (0.07419804351681406))) + ((input[180]) * (0.2758525217671678))) + ((input[181]) * (0.183117046067569))) + ((input[182]) * (0.3872085551885894))) + ((input[183]) * (1299605168.400354))) + ((input[184]) * (-0.09115246629989864))) + ((input[185]) * (0.26432996593284497))) + ((input[186]) * (0.10071410069998757));
    }
}

