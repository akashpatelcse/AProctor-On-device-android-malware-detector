package com.example.androidmalwaredetector.utilities;

import android.content.Context;
import android.content.pm.PackageManager;
import android.graphics.drawable.Drawable;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ApplicationInfo {

    public static boolean mSystemApp = true;
    public static CharSequence mApplicationName;
    public static Drawable mApplicationIcon;
    public static List<String> mBatchList = new ArrayList<>();
    public static String mApplicationID;
    public static String mDirData;
    public static String mDirNatLib;
    public static String mDirSource;
    public static String mPath;
    public static String mSearchText;

    public static List<String> getInstalledPackages(Context context){
        boolean mAppType;
        List<String> mData = new ArrayList<>();

        List<android.content.pm.ApplicationInfo> packages = getPackageManager(context).getInstalledApplications(PackageManager.GET_META_DATA);
        if (Utils.getBoolean("sort_name", true, context)) {
            Collections.sort(packages, new android.content.pm.ApplicationInfo.DisplayNameComparator(getPackageManager(context)));
        }
        for (android.content.pm.ApplicationInfo packageInfo: packages) {
            if (Utils.getString("appTypes", "all", context).equals("system")) {
                mAppType = (packageInfo.flags & android.content.pm.ApplicationInfo.FLAG_SYSTEM) != 0;
            } else if (Utils.getString("appTypes", "all", context).equals("user")) {
                mAppType = (packageInfo.flags & android.content.pm.ApplicationInfo.FLAG_SYSTEM) == 0;
            } else {
                mAppType = true;
            }
            if (mAppType && packageInfo.packageName.contains(".")) {

                if (mSearchText == null ) {
                    mData.add(packageInfo.packageName);
                } else if (getPackageManager(context).getApplicationLabel(packageInfo).toString().toLowerCase().contains(mSearchText.toLowerCase())
                        || packageInfo.packageName.toLowerCase().contains(mSearchText.toLowerCase())) {
                    mData.add(packageInfo.packageName);
                }
            }
        }

        if (Utils.getBoolean("reverse_order", false, context)) {
            Collections.reverse(mData);
        }
        return mData;
    }

    public static PackageManager getPackageManager(Context context) {
        return context.getApplicationContext().getPackageManager();
    }



    public static String getAppName(String pkgName){
        return "";
    }

    String getManifest(String pkgName){

        return "";
    }
}
