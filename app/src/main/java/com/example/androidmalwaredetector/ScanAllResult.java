package com.example.androidmalwaredetector;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.example.androidmalwaredetector.utilities.InstalledAppInfo;
import com.example.androidmalwaredetector.utilities.apkDetails;

import java.util.ArrayList;
import java.util.List;

public class ScanAllResult extends AppCompatActivity {
    String mlAlgo;
    TextView showTime;
    Context context;
    int totalApps = 0;
    List<apkDetails> apkList = new ArrayList<>();
    RecyclerviewItemAdapter.RecyclerViewClickListener listener;
    private ProgressDialog pDialog;

    public static final int progress_bar_type = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_scan_all_result);
        //RF, SVM
        context = ScanAllResult.this;
        mlAlgo = getIntent().getStringExtra("ModelName");
        showTime = (TextView)findViewById(R.id.showTime);

        Long start = System.currentTimeMillis();

        Long end = System.currentTimeMillis();
        long elapsedTime = end - start;
        showTime.setText("Time Taken: " + Long.toString(elapsedTime) + "/" + 0+ "Apps");

        AsyncTaskRunner runner = new AsyncTaskRunner();
        runner.execute("");

    }

    private void setOnClickListener() {
        listener = new RecyclerviewItemAdapter.RecyclerViewClickListener() {
            @Override
            public void onClick(View v, int position) {
                Intent intent = new Intent(ScanAllResult.this, singleApkAnalysis.class);
                String fullFilePath = InstalledAppInfo.getSourceDir(pkgList.get(position), getApplicationContext());
                intent.putExtra("apkLocation", fullFilePath);
                intent.putExtra("mlAlgo", mlAlgo);
                startActivity(intent);

            }
        };
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
    }


    @Override
    protected Dialog onCreateDialog(int id){
        switch (id){
            case progress_bar_type:
                pDialog = new ProgressDialog(this);
                pDialog.setMessage("--> Fetching Installed Apps...\n    Analyzing Apps...");
                pDialog.setIndeterminate(false);
                pDialog.setMax(totalApps);
                pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
                pDialog.setCancelable(true);
                pDialog.show();
                return pDialog;
            default:
                return null;
        }
    }
    List<String> pkgList;

    private class AsyncTaskRunner extends AsyncTask<String, String, String> {

        private String resp;
        ProgressDialog progressDialog;
        int total, count;


        @Override
        protected String doInBackground(String... params) {
            count = 0;
            pkgList = InstalledAppInfo.getInstalledPackages(getApplicationContext());
            totalApps = pkgList.size();
            pDialog.setMax(totalApps);
            pDialog.setMessage("     Fetching Installed Apps... (Done)\n--> Analyzing Apps...");
            for(String pkgName : pkgList){
                count++;
                apkList.add(new apkDetails(pkgName, mlAlgo,context));
                publishProgress(count + "/" + total);
            }
            return  "" ;
        }


        @Override
        protected void onPostExecute(String result) {
            dismissDialog(progress_bar_type);
            setOnClickListener();

            RecyclerView recyclerView = (RecyclerView) findViewById(R.id.AppContainer);
            RecyclerviewItemAdapter adapter = new RecyclerviewItemAdapter(getApplicationContext(), apkList, listener);
            recyclerView.setHasFixedSize(true);
            recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));
            recyclerView.setAdapter(adapter);
        }


        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            showDialog(progress_bar_type);

            totalApps = 0;

        }


        @Override
        protected void onProgressUpdate(String... text) {
            pDialog.setProgress(count);
        }
    }



}